// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © bairapraveen8

//@version=6
strategy("CMF & MACD Strategy", overlay=false)

sma50 = ta.sma(close,50)
sma20 = ta.sma(close,20)

// Calculate CMF (Chaikin Money Flow)
var cumVol = 0.
cumVol += nz(volume)
if barstate.islast and cumVol == 0
    runtime.error("No volume is provided by the data vendor.")
length = input.int(20, minval=1)
ad = close==high and close==low or high==low ? 0 : ((2*close-low-high)/(high-low))*volume
mf = math.sum(ad, length) / math.sum(volume, length)
// plot(mf, "CMF",  color = #43A047)
// hline(0, "Zero", color = #787B86, linestyle = hline.style_dashed)

// Calculate MACD
// Getting inputs
fast_length = input(title = "Fast Length", defval = 12)
slow_length = input(title = "Slow Length", defval = 26)
src = input(title = "Source", defval = close)
signal_length = input.int(title = "Signal Smoothing",  minval = 1, maxval = 50, defval = 9, display = display.data_window)
sma_source = input.string(title = "Oscillator MA Type",  defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
sma_signal = input.string(title = "Signal Line MA Type", defval = "EMA", options = ["SMA", "EMA"], display = display.data_window)
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
postitve_diff_percent = ((macd - signal ) / math.abs(signal)) * 100
negative_diff_percent = ((signal - macd ) / math.abs(signal)) * 100

alertcondition(hist[1] >= 0 and hist < 0, title = 'Rising to falling', message = 'The MACD histogram switched from a rising to falling state')
alertcondition(hist[1] <= 0 and hist > 0, title = 'Falling to rising', message = 'The MACD histogram switched from a falling to rising state')

// hline(0, "Zero Line", color = color.new(#787B86, 50))
// plot(hist, title = "Histogram", style = plot.style_columns, color = (hist >= 0 ? (hist[1] < hist ? #26A69A : #B2DFDB) : (hist[1] < hist ? #FFCDD2 : #FF5252)))
plot(macd,   title = "MACD",   color = #2962FF, force_overlay = false)
plot(signal, title = "Signal", color = #FF6D00,force_overlay = false)

// Entry Condition: CMF > 0.05 AND MACD Line > Signal Line
longCondition = mf > 0.05 and close > sma20 and macd > signal and postitve_diff_percent > 4

// Exit Condition: mf < 0.05 OR MACD Line < Signal Line
exitCondition = close < sma50

// Enter trade when conditions are met
if (longCondition)
    strategy.entry("Long", strategy.long)

// Exit trade when exit conditions are met
if (exitCondition)
    strategy.close("Long")

